;  procedure WriteByte(a:longint;d:byte);
;  var t : longint;
;  begin
;    msb:=(d and $80);
;    asm CLI end; {disable}
;    WMem($5555,$AA);
;    WMem($2AAA,$55);
;    WMem($5555,$A0);
;    WMem(a,d);
;    Pause(1); { kleine Schreibpause }
;    if (mfg=Winbond) and (dev=$0B) then Pause(3); { W49F002 braucht Schreibpause }
;    asm STI end; {enable}
;    t:=tick+2; { ca. 50ms Time-Out }
;    while not (((RMem(a) and $80)=msb) or (tick>t) or timex) do begin
;      if ((RMem(a) and $20)=$20) then timex:=((RMem(a) and $80)<>msb);
;    end;
;    if (tick>t) then ok:=false;
;  end;

        org    $2100
        ld      iy,$3B43    ; Kes_IOPB^.buffer_ptr
        call    $0c29       ; 8086-Adresse in Z80-Adresse umrechnen; offset in HL und $3BE3, segment in A und $3BE2
        out     ($1C),a     ; Host-Segment einstellen
        ld      iy,($3B44)  ; Flash-Addr(bit0-11) <-- Kes_IOPB^.requested_bytes_l
        ld      de,$800

L1:     ld      a,$05       ; Programm-Sequenz
        out     ($b2),a
        ld      a,$aa
        ld      ($9555),a
        ld      a,$02
        out     ($b2),a
        ld      a,$55
        ld      ($9aaa),a
        ld      a,$05
        out     ($b2),a
        ld      a,$a0
        ld      ($9555),a

        ld      a,($3B46)   ; Flash-Addr(bit12-20) <-- Kes_IOPB^.requested_bytes_h
        out     ($b2),a
        ld      a,(hl)
        ld      (iy+0),a    ; Flash schreiben
        ld      b,0
        ld      c,100
L2:     cp      a,(iy+0)    ; Ergebnis pruefen
        jr      z,L4
        djnz    L2
        dec     c
        jr      nz,L2
        ld      a,0

L3:     ld      ($3B34),a   ; Status --> Kes_IOPB^.done_bytes_h
        ld      hl,$800
        xor     a,a
        sbc     hl,de
        ld      ($3B32),hl  ; Anzahl geschriebener Bytes --> Kes_IOPB^.done_bytes_l
        ld      a,0
        out     ($1C),a     ; Host-Segment einstellen
        ret

L4:     inc     iy
        inc     hl
        ld      a,h
        or      a,l
        jr      nz,L5
        ld      a,($3BE2)
        inc     a
        out     ($1C),a     ; Host-Segment einstellen
        ld      h,$C0
L5:     dec     e
        jr      nz,L1
        dec     d
        jr      nz,L1
        ld      a,1
        jr      L3
